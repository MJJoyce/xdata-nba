/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gov.nasa.jpl.xdata.nba.impoexpo;  
@SuppressWarnings("all")
public class Game extends org.apache.gora.persistency.impl.PersistentBase implements org.apache.avro.specific.SpecificRecord, org.apache.gora.persistency.Persistent {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Game\",\"namespace\":\"gov.nasa.jpl.xdata.nba.impoexpo\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AA==\"},{\"name\":\"preview\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Preview\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AA==\"},{\"name\":\"previewText\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"recap\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Recap\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AA==\"},{\"name\":\"recapText\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"notebook\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Notebook\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAA=\"},{\"name\":\"teamNotebook\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"notebookAuthor\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"publishingBody\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postedDate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"theFacts\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"theQuotes\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]},{\"name\":\"theStat\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"theTurningPoint\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"hot\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"not\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"notable\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"upNext\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"map\",\"values\":\"string\"}}},\"default\":{}}]}],\"default\":null},{\"name\":\"gameStats\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GameStats\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAAA\"},{\"name\":\"gameSummary\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GameSummary\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAA=\"},{\"name\":\"gameDateEst\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"gameSequence\",\"type\":\"int\",\"default\":0},{\"name\":\"gameId\",\"type\":\"int\",\"default\":0},{\"name\":\"gameStatusId\",\"type\":\"int\",\"default\":0},{\"name\":\"gameStatusText\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"gameCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"homeTeamId\",\"type\":\"int\",\"default\":0},{\"name\":\"visitorTeamId\",\"type\":\"int\",\"default\":0},{\"name\":\"season\",\"type\":\"int\",\"default\":0},{\"name\":\"livePeriod\",\"type\":\"int\",\"default\":0},{\"name\":\"livePcTime\",\"type\":\"int\",\"default\":0},{\"name\":\"natlTvBroadcasterAbbreviation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"livePeriodTimeBcast\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"whStatus\",\"type\":\"int\",\"default\":0}]}],\"default\":null},{\"name\":\"lineScore\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LineScore\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAAA\"},{\"name\":\"gameDateEst\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"gameSequence\",\"type\":\"int\",\"default\":0},{\"name\":\"gameId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamAbbreviation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"teamCityName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"teamWinsLosses\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ptsQtr1\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsQtr2\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsQtr3\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsQtr4\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt1\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt2\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt3\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt4\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt5\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt6\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt7\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt8\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt9\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsOt10\",\"type\":\"int\",\"default\":0},{\"name\":\"pts\",\"type\":\"int\",\"default\":0}]}],\"default\":null},{\"name\":\"seasonSeries\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SeasonSeries\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AA==\"},{\"name\":\"gameId\",\"type\":\"int\",\"default\":0},{\"name\":\"homeTeamId\",\"type\":\"int\",\"default\":0},{\"name\":\"visitorTeamId\",\"type\":\"int\",\"default\":0},{\"name\":\"gameDateEst\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"homeTeamWins\",\"type\":\"int\",\"default\":0},{\"name\":\"homeTeamLosses\",\"type\":\"int\",\"default\":0},{\"name\":\"seriesLeader\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"lastMeeting\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LastMeeting\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAA=\"},{\"name\":\"gameId\",\"type\":\"int\",\"default\":0},{\"name\":\"lastGameId\",\"type\":\"int\",\"default\":0},{\"name\":\"lastGameDateEst\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastGameHomeTeamId\",\"type\":\"int\",\"default\":0},{\"name\":\"lastGameHomeTeamCity\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastGameHomeTeamName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastGameHomeTeamAbbreviation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastGameHomeTeamPoints\",\"type\":\"int\",\"default\":0},{\"name\":\"lastGameVisitorTeamId\",\"type\":\"int\",\"default\":0},{\"name\":\"lastGameVisitorTeamCity\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastGameVisitorTeamName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastGameVisitorTeamCity1\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastGameVisitorTeamPoints\",\"type\":\"int\",\"default\":0}]}],\"default\":null},{\"name\":\"playerStats\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PlayerStats\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAAAAA==\"},{\"name\":\"gameId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamAbbreviation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"teamCity\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"playerId\",\"type\":\"int\",\"default\":0},{\"name\":\"playerName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"startPosition\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"comment\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"min\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fgm\",\"type\":\"int\",\"default\":0},{\"name\":\"fga\",\"type\":\"int\",\"default\":0},{\"name\":\"fgPct\",\"type\":\"long\",\"default\":0},{\"name\":\"fg3m\",\"type\":\"int\",\"default\":0},{\"name\":\"fg3a\",\"type\":\"int\",\"default\":0},{\"name\":\"fg3Pct\",\"type\":\"long\",\"default\":0},{\"name\":\"ftm\",\"type\":\"int\",\"default\":0},{\"name\":\"fta\",\"type\":\"int\",\"default\":0},{\"name\":\"ftPct\",\"type\":\"int\",\"default\":0},{\"name\":\"oreb\",\"type\":\"int\",\"default\":0},{\"name\":\"dreb\",\"type\":\"int\",\"default\":0},{\"name\":\"reb\",\"type\":\"int\",\"default\":0},{\"name\":\"ast\",\"type\":\"int\",\"default\":0},{\"name\":\"stl\",\"type\":\"int\",\"default\":0},{\"name\":\"blk\",\"type\":\"int\",\"default\":0},{\"name\":\"to\",\"type\":\"int\",\"default\":0},{\"name\":\"pf\",\"type\":\"int\",\"default\":0},{\"name\":\"pts\",\"type\":\"int\",\"default\":0},{\"name\":\"plusMinus\",\"type\":\"int\",\"default\":0}]}],\"default\":null},{\"name\":\"teamStats\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TeamStats\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAAAAA==\"},{\"name\":\"gameId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"teamAbbreviation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"teamCity\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"min\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fgm\",\"type\":\"int\",\"default\":0},{\"name\":\"fga\",\"type\":\"int\",\"default\":0},{\"name\":\"fgPct\",\"type\":\"long\",\"default\":0},{\"name\":\"fg3m\",\"type\":\"int\",\"default\":0},{\"name\":\"fg3a\",\"type\":\"int\",\"default\":0},{\"name\":\"fg3Pct\",\"type\":\"long\",\"default\":0},{\"name\":\"ftm\",\"type\":\"int\",\"default\":0},{\"name\":\"fta\",\"type\":\"int\",\"default\":0},{\"name\":\"ftPct\",\"type\":\"int\",\"default\":0},{\"name\":\"oreb\",\"type\":\"int\",\"default\":0},{\"name\":\"dreb\",\"type\":\"int\",\"default\":0},{\"name\":\"reb\",\"type\":\"int\",\"default\":0},{\"name\":\"ast\",\"type\":\"int\",\"default\":0},{\"name\":\"stl\",\"type\":\"int\",\"default\":0},{\"name\":\"blk\",\"type\":\"int\",\"default\":0},{\"name\":\"to\",\"type\":\"int\",\"default\":0},{\"name\":\"pf\",\"type\":\"int\",\"default\":0},{\"name\":\"pts\",\"type\":\"int\",\"default\":0},{\"name\":\"plusMinus\",\"type\":\"int\",\"default\":0}]}],\"default\":null},{\"name\":\"otherStats\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OtherStats\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAA=\"},{\"name\":\"leagueId\",\"type\":\"int\",\"default\":0},{\"name\":\"seasonId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamAbbreviation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"teamCity\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ptsPaint\",\"type\":\"int\",\"default\":0},{\"name\":\"pts2ndChance\",\"type\":\"int\",\"default\":0},{\"name\":\"ptsFb\",\"type\":\"long\",\"default\":0},{\"name\":\"largestLead\",\"type\":\"int\",\"default\":0},{\"name\":\"leadChanges\",\"type\":\"int\",\"default\":0},{\"name\":\"timesTied\",\"type\":\"long\",\"default\":0}]}],\"default\":null},{\"name\":\"officials\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Officials\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AA==\"},{\"name\":\"officialId\",\"type\":\"int\",\"default\":0},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"jerseyNum\",\"type\":\"int\",\"default\":0}]}],\"default\":null},{\"name\":\"gameInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GameInfo\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AA==\"},{\"name\":\"gameDate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"attendance\",\"type\":\"int\",\"default\":0},{\"name\":\"gameTime\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"inactivePlayers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"InactivePlayers\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AAA=\"},{\"name\":\"playerId\",\"type\":\"int\",\"default\":0},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"jerseyNum\",\"type\":\"int\",\"default\":0},{\"name\":\"teamId\",\"type\":\"int\",\"default\":0},{\"name\":\"teamCity\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"teamName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"teamAbbreviation\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"availableVideo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AvailableVideo\",\"fields\":[{\"name\":\"__g__dirty\",\"type\":\"bytes\",\"doc\":\"Bytes used to represent weather or not a field is dirty.\",\"default\":\"AA==\"},{\"name\":\"videoAvailableFlag\",\"type\":\"int\",\"default\":0}]}],\"default\":null},{\"name\":\"gameId\",\"type\":\"int\",\"default\":0},{\"name\":\"rangeType\",\"type\":\"int\",\"default\":0},{\"name\":\"startPeriod\",\"type\":\"int\",\"default\":0},{\"name\":\"startRange\",\"type\":\"int\",\"default\":0},{\"name\":\"endPeriod\",\"type\":\"int\",\"default\":0},{\"name\":\"endRange\",\"type\":\"int\",\"default\":0}]}],\"default\":null}]}");

  /** Enum containing all data bean's fields. */
  public static enum Field {
    __G__DIRTY(0, "__g__dirty"),
    PREVIEW(1, "preview"),
    RECAP(2, "recap"),
    NOTEBOOK(3, "notebook"),
    GAME_STATS(4, "gameStats"),
    ;
    /**
     * Field's index.
     */
    private int index;

    /**
     * Field's name.
     */
    private String name;

    /**
     * Field's constructor
     * @param index field's index.
     * @param name field's name.
     */
    Field(int index, String name) {this.index=index;this.name=name;}

    /**
     * Gets field's index.
     * @return int field's index.
     */
    public int getIndex() {return index;}

    /**
     * Gets field's name.
     * @return String field's name.
     */
    public String getName() {return name;}

    /**
     * Gets field's attributes to string.
     * @return String field's attributes to string.
     */
    public String toString() {return name;}
  };

  public static final String[] _ALL_FIELDS = {
  "__g__dirty",
  "preview",
  "recap",
  "notebook",
  "gameStats",
  };

  /** Bytes used to represent weather or not a field is dirty. */
  private java.nio.ByteBuffer __g__dirty = java.nio.ByteBuffer.wrap(new byte[1]);
  private gov.nasa.jpl.xdata.nba.impoexpo.Preview preview;
  private gov.nasa.jpl.xdata.nba.impoexpo.Recap recap;
  private gov.nasa.jpl.xdata.nba.impoexpo.Notebook notebook;
  private gov.nasa.jpl.xdata.nba.impoexpo.GameStats gameStats;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return __g__dirty;
    case 1: return preview;
    case 2: return recap;
    case 3: return notebook;
    case 4: return gameStats;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value) {
    switch (field$) {
    case 0: __g__dirty = (java.nio.ByteBuffer)(value); break;
    case 1: preview = (gov.nasa.jpl.xdata.nba.impoexpo.Preview)(value); break;
    case 2: recap = (gov.nasa.jpl.xdata.nba.impoexpo.Recap)(value); break;
    case 3: notebook = (gov.nasa.jpl.xdata.nba.impoexpo.Notebook)(value); break;
    case 4: gameStats = (gov.nasa.jpl.xdata.nba.impoexpo.GameStats)(value); break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'preview' field.
   */
  public gov.nasa.jpl.xdata.nba.impoexpo.Preview getPreview() {
    return preview;
  }

  /**
   * Sets the value of the 'preview' field.
   * @param value the value to set.
   */
  public void setPreview(gov.nasa.jpl.xdata.nba.impoexpo.Preview value) {
    this.preview = value;
    setDirty(1);
  }
  
  /**
   * Checks the dirty status of the 'preview' field. A field is dirty if it represents a change that has not yet been written to the database.
   * @param value the value to set.
   */
  public boolean isPreviewDirty(gov.nasa.jpl.xdata.nba.impoexpo.Preview value) {
    return isDirty(1);
  }

  /**
   * Gets the value of the 'recap' field.
   */
  public gov.nasa.jpl.xdata.nba.impoexpo.Recap getRecap() {
    return recap;
  }

  /**
   * Sets the value of the 'recap' field.
   * @param value the value to set.
   */
  public void setRecap(gov.nasa.jpl.xdata.nba.impoexpo.Recap value) {
    this.recap = value;
    setDirty(2);
  }
  
  /**
   * Checks the dirty status of the 'recap' field. A field is dirty if it represents a change that has not yet been written to the database.
   * @param value the value to set.
   */
  public boolean isRecapDirty(gov.nasa.jpl.xdata.nba.impoexpo.Recap value) {
    return isDirty(2);
  }

  /**
   * Gets the value of the 'notebook' field.
   */
  public gov.nasa.jpl.xdata.nba.impoexpo.Notebook getNotebook() {
    return notebook;
  }

  /**
   * Sets the value of the 'notebook' field.
   * @param value the value to set.
   */
  public void setNotebook(gov.nasa.jpl.xdata.nba.impoexpo.Notebook value) {
    this.notebook = value;
    setDirty(3);
  }
  
  /**
   * Checks the dirty status of the 'notebook' field. A field is dirty if it represents a change that has not yet been written to the database.
   * @param value the value to set.
   */
  public boolean isNotebookDirty(gov.nasa.jpl.xdata.nba.impoexpo.Notebook value) {
    return isDirty(3);
  }

  /**
   * Gets the value of the 'gameStats' field.
   */
  public gov.nasa.jpl.xdata.nba.impoexpo.GameStats getGameStats() {
    return gameStats;
  }

  /**
   * Sets the value of the 'gameStats' field.
   * @param value the value to set.
   */
  public void setGameStats(gov.nasa.jpl.xdata.nba.impoexpo.GameStats value) {
    this.gameStats = value;
    setDirty(4);
  }
  
  /**
   * Checks the dirty status of the 'gameStats' field. A field is dirty if it represents a change that has not yet been written to the database.
   * @param value the value to set.
   */
  public boolean isGameStatsDirty(gov.nasa.jpl.xdata.nba.impoexpo.GameStats value) {
    return isDirty(4);
  }

  /** Creates a new Game RecordBuilder */
  public static gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder newBuilder() {
    return new gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder();
  }
  
  /** Creates a new Game RecordBuilder by copying an existing Builder */
  public static gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder newBuilder(gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder other) {
    return new gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder(other);
  }
  
  /** Creates a new Game RecordBuilder by copying an existing Game instance */
  public static gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder newBuilder(gov.nasa.jpl.xdata.nba.impoexpo.Game other) {
    return new gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder(other);
  }
  
  private static java.nio.ByteBuffer deepCopyToWriteOnlyBuffer(
      java.nio.ByteBuffer input) {
    java.nio.ByteBuffer copy = java.nio.ByteBuffer.allocate(input.capacity());
    int position = input.position();
    input.reset();
    int mark = input.position();
    int limit = input.limit();
    input.rewind();
    input.limit(input.capacity());
    copy.put(input);
    input.rewind();
    copy.rewind();
    input.position(mark);
    input.mark();
    copy.position(mark);
    copy.mark();
    input.position(position);
    copy.position(position);
    input.limit(limit);
    copy.limit(limit);
    return copy.asReadOnlyBuffer();
  }
  
  /**
   * RecordBuilder for Game instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Game>
    implements org.apache.avro.data.RecordBuilder<Game> {

    private java.nio.ByteBuffer __g__dirty;
    private gov.nasa.jpl.xdata.nba.impoexpo.Preview preview;
    private gov.nasa.jpl.xdata.nba.impoexpo.Recap recap;
    private gov.nasa.jpl.xdata.nba.impoexpo.Notebook notebook;
    private gov.nasa.jpl.xdata.nba.impoexpo.GameStats gameStats;

    /** Creates a new Builder */
    private Builder() {
      super(gov.nasa.jpl.xdata.nba.impoexpo.Game.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Game instance */
    private Builder(gov.nasa.jpl.xdata.nba.impoexpo.Game other) {
            super(gov.nasa.jpl.xdata.nba.impoexpo.Game.SCHEMA$);
      if (isValidValue(fields()[0], other.__g__dirty)) {
        this.__g__dirty = (java.nio.ByteBuffer) data().deepCopy(fields()[0].schema(), other.__g__dirty);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.preview)) {
        this.preview = (gov.nasa.jpl.xdata.nba.impoexpo.Preview) data().deepCopy(fields()[1].schema(), other.preview);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.recap)) {
        this.recap = (gov.nasa.jpl.xdata.nba.impoexpo.Recap) data().deepCopy(fields()[2].schema(), other.recap);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.notebook)) {
        this.notebook = (gov.nasa.jpl.xdata.nba.impoexpo.Notebook) data().deepCopy(fields()[3].schema(), other.notebook);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.gameStats)) {
        this.gameStats = (gov.nasa.jpl.xdata.nba.impoexpo.GameStats) data().deepCopy(fields()[4].schema(), other.gameStats);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'preview' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Preview getPreview() {
      return preview;
    }
    
    /** Sets the value of the 'preview' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder setPreview(gov.nasa.jpl.xdata.nba.impoexpo.Preview value) {
      validate(fields()[1], value);
      this.preview = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'preview' field has been set */
    public boolean hasPreview() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'preview' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder clearPreview() {
      preview = null;
      fieldSetFlags()[1] = false;
      return this;
    }
    
    /** Gets the value of the 'recap' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Recap getRecap() {
      return recap;
    }
    
    /** Sets the value of the 'recap' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder setRecap(gov.nasa.jpl.xdata.nba.impoexpo.Recap value) {
      validate(fields()[2], value);
      this.recap = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'recap' field has been set */
    public boolean hasRecap() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'recap' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder clearRecap() {
      recap = null;
      fieldSetFlags()[2] = false;
      return this;
    }
    
    /** Gets the value of the 'notebook' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Notebook getNotebook() {
      return notebook;
    }
    
    /** Sets the value of the 'notebook' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder setNotebook(gov.nasa.jpl.xdata.nba.impoexpo.Notebook value) {
      validate(fields()[3], value);
      this.notebook = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'notebook' field has been set */
    public boolean hasNotebook() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'notebook' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder clearNotebook() {
      notebook = null;
      fieldSetFlags()[3] = false;
      return this;
    }
    
    /** Gets the value of the 'gameStats' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.GameStats getGameStats() {
      return gameStats;
    }
    
    /** Sets the value of the 'gameStats' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder setGameStats(gov.nasa.jpl.xdata.nba.impoexpo.GameStats value) {
      validate(fields()[4], value);
      this.gameStats = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'gameStats' field has been set */
    public boolean hasGameStats() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'gameStats' field */
    public gov.nasa.jpl.xdata.nba.impoexpo.Game.Builder clearGameStats() {
      gameStats = null;
      fieldSetFlags()[4] = false;
      return this;
    }
    
    @Override
    public Game build() {
      try {
        Game record = new Game();
        record.__g__dirty = fieldSetFlags()[0] ? this.__g__dirty : (java.nio.ByteBuffer) java.nio.ByteBuffer.wrap(new byte[1]);
        record.preview = fieldSetFlags()[1] ? this.preview : (gov.nasa.jpl.xdata.nba.impoexpo.Preview) defaultValue(fields()[1]);
        record.recap = fieldSetFlags()[2] ? this.recap : (gov.nasa.jpl.xdata.nba.impoexpo.Recap) defaultValue(fields()[2]);
        record.notebook = fieldSetFlags()[3] ? this.notebook : (gov.nasa.jpl.xdata.nba.impoexpo.Notebook) defaultValue(fields()[3]);
        record.gameStats = fieldSetFlags()[4] ? this.gameStats : (gov.nasa.jpl.xdata.nba.impoexpo.GameStats) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
  
  public Game.Tombstone getTombstone(){
  	return TOMBSTONE;
  }

  public Game newInstance(){
    return newBuilder().build();
  }

  private static final Tombstone TOMBSTONE = new Tombstone();
  
  public static final class Tombstone extends Game implements org.apache.gora.persistency.Tombstone {
  
      private Tombstone() { }
  
	  				  /**
	   * Gets the value of the 'preview' field.
		   */
	  public gov.nasa.jpl.xdata.nba.impoexpo.Preview getPreview() {
	    throw new java.lang.UnsupportedOperationException("Get is not supported on tombstones");
	  }
	
	  /**
	   * Sets the value of the 'preview' field.
		   * @param value the value to set.
	   */
	  public void setPreview(gov.nasa.jpl.xdata.nba.impoexpo.Preview value) {
	    throw new java.lang.UnsupportedOperationException("Set is not supported on tombstones");
	  }
	  
	  /**
	   * Checks the dirty status of the 'preview' field. A field is dirty if it represents a change that has not yet been written to the database.
		   * @param value the value to set.
	   */
	  public boolean isPreviewDirty(gov.nasa.jpl.xdata.nba.impoexpo.Preview value) {
	    throw new java.lang.UnsupportedOperationException("IsDirty is not supported on tombstones");
	  }
	
				  /**
	   * Gets the value of the 'recap' field.
		   */
	  public gov.nasa.jpl.xdata.nba.impoexpo.Recap getRecap() {
	    throw new java.lang.UnsupportedOperationException("Get is not supported on tombstones");
	  }
	
	  /**
	   * Sets the value of the 'recap' field.
		   * @param value the value to set.
	   */
	  public void setRecap(gov.nasa.jpl.xdata.nba.impoexpo.Recap value) {
	    throw new java.lang.UnsupportedOperationException("Set is not supported on tombstones");
	  }
	  
	  /**
	   * Checks the dirty status of the 'recap' field. A field is dirty if it represents a change that has not yet been written to the database.
		   * @param value the value to set.
	   */
	  public boolean isRecapDirty(gov.nasa.jpl.xdata.nba.impoexpo.Recap value) {
	    throw new java.lang.UnsupportedOperationException("IsDirty is not supported on tombstones");
	  }
	
				  /**
	   * Gets the value of the 'notebook' field.
		   */
	  public gov.nasa.jpl.xdata.nba.impoexpo.Notebook getNotebook() {
	    throw new java.lang.UnsupportedOperationException("Get is not supported on tombstones");
	  }
	
	  /**
	   * Sets the value of the 'notebook' field.
		   * @param value the value to set.
	   */
	  public void setNotebook(gov.nasa.jpl.xdata.nba.impoexpo.Notebook value) {
	    throw new java.lang.UnsupportedOperationException("Set is not supported on tombstones");
	  }
	  
	  /**
	   * Checks the dirty status of the 'notebook' field. A field is dirty if it represents a change that has not yet been written to the database.
		   * @param value the value to set.
	   */
	  public boolean isNotebookDirty(gov.nasa.jpl.xdata.nba.impoexpo.Notebook value) {
	    throw new java.lang.UnsupportedOperationException("IsDirty is not supported on tombstones");
	  }
	
				  /**
	   * Gets the value of the 'gameStats' field.
		   */
	  public gov.nasa.jpl.xdata.nba.impoexpo.GameStats getGameStats() {
	    throw new java.lang.UnsupportedOperationException("Get is not supported on tombstones");
	  }
	
	  /**
	   * Sets the value of the 'gameStats' field.
		   * @param value the value to set.
	   */
	  public void setGameStats(gov.nasa.jpl.xdata.nba.impoexpo.GameStats value) {
	    throw new java.lang.UnsupportedOperationException("Set is not supported on tombstones");
	  }
	  
	  /**
	   * Checks the dirty status of the 'gameStats' field. A field is dirty if it represents a change that has not yet been written to the database.
		   * @param value the value to set.
	   */
	  public boolean isGameStatsDirty(gov.nasa.jpl.xdata.nba.impoexpo.GameStats value) {
	    throw new java.lang.UnsupportedOperationException("IsDirty is not supported on tombstones");
	  }
	
		  
  }
  
}